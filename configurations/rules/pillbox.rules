import org.openhab.core.library.types.*
import org.openhab.core.persistence.*
import org.openhab.model.script.actions.*
import org.openhab.model.script.actions.Timer

var String USER_EMAIL = "alexrupp@free.fr"

var Number counter = 1
var Timer timer = null

var Timer timerPanOnHotplate = null
var Timer timerHotplateWithoutPan = null
var Timer timerAbsence = null

var Number presence = 0
var Number hotplateHotWithPan = 0
//Variables smart pilulier
var Number pill_taken = 0

//Règles pour le smart pilulier

//Declenche l'alarme si le médicement n'a pas déjà été pris
rule PillboxWarning
when
//Time cron "0 * * * * ?"
Item Alarme_pilulier received update
then
println("Règle pillboxwarning")
println("etat Alarme pilulier" + Alarme_pilulier.state)
if (Alarme_pilulier.state == ON) {
	println("clignote si medic pas pris")
	if (pill_taken == 0) {
		println("Warning pilbox")
		sendCommand(Pillbox, "CLIGNOTE;")
	}
}
else {
	println("stop clignote")
	sendCommand(Pillbox, "STOP;")
}
end

//Enregistre la prise de médicament 
// ou reporte une prise en trop
rule "Pill Taken"
when
Item Pillbox received update
then
println("regle Pill Taken")
// si la boite a ete ouverte, on enregistre la prise de médicament
if(Pillbox.state.toString.trim == "PillTaken") {
	if (pill_taken == 0) {
		println("médicaments pris")
		pill_taken = 1
	}
	else {
		println("envoyer notif trop de medoc")
	}
}

end


/**
 * Try displaying string :
 * // TODO: To remove  + push icons
 */
/*
   rule Startup
   when 
   System started
   then
   var String mailboxState = "Letter detected"

   println("Mailbox: "+mailboxState)
   postUpdate(Mailbox, mailboxState)
   end
 */
